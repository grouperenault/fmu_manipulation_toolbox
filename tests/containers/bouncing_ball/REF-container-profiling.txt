# Container flags <MT> <Profiling> <Sequential>
0 1 0
# Internal time step in seconds
0.001
# NB of embedded FMU's
2
bb_position.fmu 2
bb_position
{8fbd9f16-ceaa-97ed-127f-987a60b25648}
bb_velocity.fmu 2
bb_velocity
{abf5f61d-b459-3641-3a2c-1e594b990280}
# NB local variables: real64, real32, integer8, uinteger8, integer16, uinteger16, integer32, uinteger32, integer64, uinteger64, boolean, boolean1, strings
4 0 0 0 0 0 0 0 0 0 1 0 0
# CONTAINER I/O: <VR> <NB> <FMU_INDEX> <FMU_VR> [<FMU_INDEX> <FMU_VR>]
# real64
6 6
0 1 -1 0
1 1 -2 1
2 1 -2 2
4 1 0 1
5 1 1 0
3 1 -1 3
# real32
0 0
# integer8
0 0
# uinteger8
0 0
# integer16
0 0
# uinteger16
0 0
# integer32
0 0
# uinteger32
0 0
# integer64
0 0
# uinteger64
0 0
# boolean
1 1
167772160 1 -1 0
# boolean1
0 0
# strings
0 0
# Inputs of bb_position.fmu - real64: <VR> <FMU_VR>
1
3 0
# Inputs of bb_position.fmu - real32: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - integer8: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - uinteger8: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - integer16: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - uinteger16: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - integer32: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - uinteger32: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - integer64: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - uinteger64: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - boolean: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - boolean1: <VR> <FMU_VR>
0
# Inputs of bb_position.fmu - strings: <VR> <FMU_VR>
0
# Start values of bb_position.fmu - real64: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - real32: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - integer8: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - uinteger8: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - integer16: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - uinteger16: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - integer32: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - uinteger32: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - integer64: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - uinteger64: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - boolean: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - boolean1: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_position.fmu - strings: <FMU_VR> <RESET> <VALUE>
0
# Outputs of bb_position.fmu - real64: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - real32: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - integer8: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - uinteger8: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - integer16: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - uinteger16: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - integer32: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - uinteger32: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - integer64: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - uinteger64: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - boolean: <VR> <FMU_VR>
1
167772160 0
# Outputs of bb_position.fmu - boolean1: <VR> <FMU_VR>
0
# Outputs of bb_position.fmu - strings: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - real64: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - real32: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - integer8: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - uinteger8: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - integer16: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - uinteger16: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - integer32: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - uinteger32: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - integer64: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - uinteger64: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - boolean: <VR> <FMU_VR>
1
167772160 0
# Inputs of bb_velocity.fmu - boolean1: <VR> <FMU_VR>
0
# Inputs of bb_velocity.fmu - strings: <VR> <FMU_VR>
0
# Start values of bb_velocity.fmu - real64: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - real32: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - integer8: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - uinteger8: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - integer16: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - uinteger16: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - integer32: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - uinteger32: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - integer64: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - uinteger64: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - boolean: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - boolean1: <FMU_VR> <RESET> <VALUE>
0
# Start values of bb_velocity.fmu - strings: <FMU_VR> <RESET> <VALUE>
0
# Outputs of bb_velocity.fmu - real64: <VR> <FMU_VR>
1
3 0
# Outputs of bb_velocity.fmu - real32: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - integer8: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - uinteger8: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - integer16: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - uinteger16: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - integer32: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - uinteger32: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - integer64: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - uinteger64: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - boolean: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - boolean1: <VR> <FMU_VR>
0
# Outputs of bb_velocity.fmu - strings: <VR> <FMU_VR>
0
